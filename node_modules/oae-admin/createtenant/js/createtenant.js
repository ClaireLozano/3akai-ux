
define(['jquery', 'oae.core'], function($, oae) {

    // Regex used to validate a URL. jQuery validate has a URL validator but not a hostname
    // validator, so we do that manually
    var urlRegex = /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i;

    return function(uid, showSettings) {

        // The widget container
        var $rootel = $('#' + uid);

        /**
         * Set up the validation on the `create tenant` form, including the error messages
         */
        var setUpValidation = function() {
            var validateOpts = {
                'messages': {
                    'alias': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_ENTER_A_TENANT_ALIAS__', 'createtenant')
                    },
                    'displayName': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_ENTER_A_TENANT_NAME__')
                    },
                    'host': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_ENTER_A_HOST_NAME__'),
                        'hostname': oae.api.i18n.translate('__MSG__PLEASE_ENTER_A_VALID_HOST_NAME__')
                    }
                },
                'methods': {
                    'hostname': {
                        'method': function(value, element) {
                            return urlRegex.test('http://' + value);
                        }
                    }
                },
                'submitHandler': createTenant
            };
            oae.api.util.validation().validate($('#createtenant-form', $rootel), validateOpts);
        };

        /**
         * Create a new tenant
         */
        var createTenant = function() {
            var alias = $.trim($('#createtenant-alias', $rootel).val());
            var displayName = $.trim($('#createtenant-displayName', $rootel).val());
            var host = $.trim($('#createtenant-host', $rootel).val());

            oae.api.admin.createTenant(alias, displayName, host, function(err, tenant) {
                if (err) {
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TENANT_NOT_CREATED__', 'createtenant'),
                        jqXHR.responseText,
                        'error');
                } else {
                    $('#createtenant-modal', $rootel).modal('hide');
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TENANT_CREATED__', 'createtenant'),
                        oae.api.i18n.translate('__MSG__TENANT_SUCCESSFULLY_CREATED__', 'createtenant', {'displayName': oae.api.util.security().encodeForHTML(tenant.displayName)}));
                }
            });
            return false;
        };

        /**
         * Initialize the create tenant modal
         */
        var init = function() {
            $(document).on('click', '.oae-trigger-createtenant', function() {
                $('#createtenant-modal', $rootel).modal({
                    'backdrop': 'static'
                });
            });

            $('#createtenant-modal').on('hidden.bs.modal', function() {
                // Reset the form
                $('button, input', $rootel).prop('disabled', false);
                var $form = $('#createtenant-form', $rootel);
                $form[0].reset();
                oae.api.util.validation().clear($form);
            });

            // Set focus to the tenant alias field
            $('#createtenant-modal', $rootel).on('shown.bs.modal', function () {
                $('#createtenant-alias', $rootel).focus();
            });
        };

        init();
        setUpValidation();
    };
});
