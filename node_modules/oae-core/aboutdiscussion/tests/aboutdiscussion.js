/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

casper.test.begin('Widget - About Discussion', function(test) {

    /**
     * Open the about discussion modal with assertions
     */
    var verifyOpenAboutDiscussion = function() {
        casper.waitForSelector('#discussion-clip-container .oae-clip-content > button', function() {
            casper.click('#discussion-clip-container .oae-clip-content > button');
            test.assertExists('.oae-trigger-aboutdiscussion', 'About discussion trigger exists');
            casper.click('.oae-trigger-aboutdiscussion');
            casper.waitUntilVisible('#aboutdiscussion-modal', function() {
                test.assertVisible('#aboutdiscussion-modal', 'About discussion pane is showing after trigger');
                casper.click('#discussion-clip-container .oae-clip-content > button');
            });
        });
    };

    /**
     * Open the about discussion modal without assertions
     */
    var openAboutDiscussion = function() {
        casper.waitForSelector('#discussion-clip-container .oae-clip-content > button', function() {
            casper.click('#discussion-clip-container .oae-clip-content > button');
            casper.click('.oae-trigger-aboutdiscussion');
            casper.waitUntilVisible('#aboutdiscussion-modal', function() {
                casper.click('#discussion-clip-container .oae-clip-content > button');
            });
        });
    };

    /**
     * Verify that all elements for discussions are present in the about discussion modal
     *
     * @param {User}          user1                The user profile of the user that created the discussion
     * @param {Discussion}    discussionProfile    The created discussion's profile object
     */
    var verifyAboutDiscussionElements = function(user1, discussionProfile) {
        test.assertExists('#aboutdiscussion-modal .modal-header h3', 'Verify that the modal has a header');
        test.assertSelectorHasText('#aboutdiscussion-modal .modal-header h3', 'About', 'Verify that the modal header reads \'About\'');
        test.assertExists('#aboutdiscussion-modal .modal-body ul.oae-list li', 'Verify that the modal shows who added the discussion');
        test.assertExists('#aboutdiscussion-modal .modal-body ul.oae-list li .oae-listitem-primary-thumbnail', 'Verify that the modal shows the picture of the user who added the discussion');
        test.assertExists('#aboutdiscussion-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', 'Verify that the modal shows the name of the user who added the discussion');
        test.assertSelectorHasText('#aboutdiscussion-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', user1.displayName, 'Verify that the correct name is shown');
        test.assertExists('#aboutdiscussion-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'Verify that the modal shows the tenant of the user who added the discussion');
        test.assertSelectorHasText('#aboutdiscussion-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'CasperJS Tenant', 'Verify that the metadata shows the tenant name');
        test.assertExists('#aboutdiscussion-modal .modal-body #aboutdiscussion-metadata-container #aboutdiscussion-title', 'Verify that the modal shows title of the discussion');
        test.assertSelectorHasText('#aboutdiscussion-modal .modal-body #aboutdiscussion-metadata-container #aboutdiscussion-title', discussionProfile.displayName, 'Verify that the correct discussion title is shown');
        test.assertExists('#aboutdiscussion-modal .modal-body #aboutdiscussion-metadata-container time', 'Verify that the modal shows when the discussion was added');
    };

    casper.start(configUtil().tenantUI, function() {
        // Create a couple of users to test with
        var user1 = null;
        var user2 = null;
        userUtil().createUsers(2, function(users) {
            user1 = users[0];
            user2 = users[1];
        });

        casper.waitFor(function() {
            return user1 !== null;
        }, function() {
            // Login with the first user
            casper.then(function() {
                userUtil().doLogIn(user1.username, user1.password);
            });

            var discussionProfile = null;

            casper.then(function() {
                // Create all resources before starting the tests
                // Create a discussion
                discussionUtil().createDiscussion(null, null, function(_discussionProfile) {
                    discussionProfile = _discussionProfile;
                });
            });

            casper.waitFor(function() {
                return discussionProfile !== null;
            }, function() {
                // Log out from user 1
                casper.then(userUtil().doLogOut);

                // Log in with user 2 to start the tests
                casper.then(function() {
                    userUtil().doLogIn(user2.username, user2.password);
                });

                casper.thenOpen(configUtil().tenantUI + discussionProfile.profilePath, function() {
                    casper.echo('Verify open about discussion modal', 'INFO');
                    casper.waitForSelector('#discussion-clip-container .oae-clip-content > button', function() {
                        verifyOpenAboutDiscussion();
                    });
                });

                casper.then(function() {
                    casper.echo('Verify about discussion elements', 'INFO');
                    verifyAboutDiscussionElements(user1, discussionProfile);
                });

                casper.then(userUtil().doLogOut);
            });
        });

    });

    casper.run(function() {
        test.done();
    });
});
